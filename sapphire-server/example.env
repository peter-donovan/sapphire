### Example .env ###

### To quickly set this project up, from the root directory execute:
### `cp example.env .env` or simply change the name of this file to `.env`

## NOTE: No default configuration exists (yet) so these values must ALL be set.
##    The application will not work unless the (uncommented) values below are set.

# Environment override (not typically needed)
#NODE_ENV="development"

# Application
GLOBAL_ROUTE_PREFIX="api"
PORT="3400"

# JSON Web Tokens
JWT_EXPIRY_TIME="86400"
JWT_ISSUER="namespace-example-appname"
JWT_KEY_ID="appname-key-x"
JWT_SECRET="zY9TCzKGqgHLzmISEIYx5t5s+E+MzH8gRffdNYYF4oL9yZkmdhgvZS+0/FHoMSmRv0F/ztoZiBatAhuxJlwHGg=="
JWT_TOKEN_NAME="namespace_appname_token"

# Redis cache
REDIS_HOST="localhost"
REDIS_PORT="6379"

# Convenient access to postgres: `psql $DATABASE_URL` - equivalent to TYPEORM_URL
DATABASE_URL="postgres://postgres@localhost:5432/appname"

# TypeORM URL / Database URL
TYPEORM_CONNECTION="postgres"
TYPEORM_DROP_SCHEMA="false"
TYPEORM_ENTITIES="dist/**/*.entity{.js,.ts}"
TYPEORM_LOGGING="true"
TYPEORM_SYNCHRONIZE="true"
TYPEORM_URL="postgres://postgres@localhost:5432/appname"
TYPEORM_UUID_EXTENSION="pgcrypto"

# WebSocket Service / Gateway
WEBSOCKET_PATH="/ws"